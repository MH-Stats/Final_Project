---
title: "Final_Project"
author: "Mark Heinen"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## EDA of Diabetes Health Indicators Dataset

The purpose of this document is to perform exploratory data analysis of the Diabetes Health Indicators Dataset. The Health Indicators Dataset contains content from the The 2015 Behavioral Risk Factor Surveillance System (BRFSS) telephone survey, which is a national CDC ran survey used to collect data on human health behavior and chronic conditions. The content from the survey has been choosen with the specific purpose of analyzing factors related to diabetes.

Our first steps in analyzing the data will be to read in the document, validate the data, then clean the data. After that we will create numeric and categorical summaries as well as plots of all the variables. This will hopefully help us decide which variables may be important in determining whether someone may have diabetes (or risk of developing).

### Data Validation and Cleaning

```{r}
# Setting up package librarys 
library(tidyverse)
```

```{r}
# Reading in CSV file of DHI data
dhi_data <- read_csv("diabetes_binary_health_indicators_BRFSS2015.csv")
dhi_data
```

Creating a function to speed up the process of converting our binary variables into factors, as R tends to run better when using factors for them.

```{r}
# Function to change binary variables into factors
binary_creator <- function(data){
  # Grabbing all binary cols
  binary_cols <- colnames(data)[sapply(data, function(col) all(col %in% c(0, 1)))]

  # removing sex from binary_cols
  binary_cols <- setdiff(binary_cols, "Sex")

  # Creating Binary cols
  for(var in colnames(data)){
    if(var %in% binary_cols){
      data[[var]] <- factor(data[[var]], levels = c(0,1), labels = c("No", "Yes"))
    }
  }
  return(data)
}
# Running function
dhi_data <- binary_creator(dhi_data)

# Converting other factor variables 
dhi_data <- dhi_data |>
  mutate(
    Sex = factor(Sex, levels = c(0,1), labels = c("female", "male")),
    GenHlth = factor(GenHlth, levels = c(1,2,3,4,5), labels = c("excellent", "very_good", "good", "fair", "poor")),
    Education = factor(Education, levels = c(1,2,3,4,5,6), labels = c("no_schooling", "1_to_8", "9_to_11", "12_or_GED", "some_college", "college_grad")),
    Income = factor(Income, levels = c(1,2,3,4,5,6,7,8), labels = c("10k_less", "15k_less", "20k_less", "25k_less", "35k_less", "50k_less", "75k_less", "75k_more"))
  )
```

Now I am going to rename a few columns in order to make using them easier in terms of referencing them in the code.

```{r}
# renaming columns 
dhi_data <- dhi_data |>
  rename(
    "Diabetes" = Diabetes_binary,
    "HeartDisease" = HeartDiseaseorAttack,
    "HvyAlch" = HvyAlcoholConsump,
    "Healthcare" = AnyHealthcare,
    "NoDoc" = NoDocbcCost
  )
```

Checking for missing values, this should be zero since the dataset being used has already been cleaned.

```{r}
# grabbing all missing values
colSums(is.na(dhi_data))
```

No missing values were found, which was expected.

### Summary Statistics and Graphs

Now we need to create some summary stats and to start we are going to look at the summaries of some numeric variables. We will also be doing this while grouping by the Diabetes column as we want to see how these variables impact Diabetes status.

```{r}
# Creating function to grab numeric summary stats
numeric_summary <- function(data, group_var = "Diabetes"){
  # Selecting numeric vars
  num_vars <- data |>
    select(where(is.numeric))
  
  # Creating empty list
  num_sum_list <- list()
  
  # Looping summary stats 
  for(num_var in colnames(num_vars)){
    # Grouping by group_var
    num_sums <- data |>
    group_by(across(all_of(group_var)))|>
    summarize(across(all_of(num_var), .fns = list("mean" = mean, # This will create a named list with .fns
                                       "median" = median,
                                       "sd" = sd,
                                       "IQR" = IQR,
                                       "min" = min,
                                       "max" = max),
                     .names = "{.fn}")) # .fn is function names
    
    num_sums <- num_sums |>
      mutate(variable = num_var)
    num_sums <- num_sums |> 
      select(variable, everything())
  
    num_sum_list[[num_var]] <- num_sums
  }
  return(num_sum_list)
}

# Running function 
num_sums <- numeric_summary(dhi_data)
  
# Printing columns out
num_sums
```

Some interesting findings can be found based off these results. The first being that the mean and median BMI is lower in the No Diabetes group (27.8/27 to 31.9/31), the mean poor mental health days was lower in the No diabetes group (2.98 to 4.46) but the median was zero for both, the mean was also much higher in the yes diabetes group for number of poor physical health days (3.64 to 7.95) but again the medians were not significantly different (0 to 1), and finally we find that the mean and median were higher in the yes diabetes group for age (7.81/8 to 9.38/10). This could indicate that the MentHlth and PhysHlth variables have data that is skewed with most individuals having no issues most days, but a few individuals with a lot of negative days. To investigate further we should look at some density plots and some bar plots.

```{r}
# Creating densityplots while colored by Diabetes status
ggplot(dhi_data, aes(x = BMI, fill = Diabetes)) +
  geom_density(alpha=0.3) +
  ggtitle("BMI by Diabetes Status") +
  xlab("BMI")

ggplot(dhi_data, aes(x = MentHlth, fill = Diabetes)) +
  geom_density(alpha=0.3) +
  ggtitle("Number of Poor Mental Health Days by Diabetes Status") +
  xlab("Poor Mental Health Days")

ggplot(dhi_data, aes(x = PhysHlth, fill = Diabetes)) +
  geom_density(alpha=0.3) +
  ggtitle("Number of Poor Physical Health Days by Diabetes Status") +
  xlab("Poor Physical Health Days")

ggplot(dhi_data, aes(x = Age, fill = Diabetes)) +
  geom_density(alpha=0.3) +
  ggtitle("Age by Diabetes Status") +
  xlab("Age in Groupings of Five Starting at 18")

# Creating Barplots for MentHlth, PhysHlth, and Age as they are on scales
ggplot(dhi_data, aes(x = MentHlth)) +
  geom_bar() +
  ggtitle("Number of Poor Mental Health Days by Diabetes Status") +
  xlab("Poor Mental Health Days") +
  facet_wrap(~Diabetes, scales = "free_y") + # Making graphs the same scale to aid comparison
  scale_y_continuous(expand = c(0, 0))
  
ggplot(dhi_data, aes(x = PhysHlth)) +
  geom_bar() +
  ggtitle("Number of Poor Physical Health Days by Diabetes Status") +
  xlab("Poor Physical Health Days") +
  facet_wrap(~Diabetes, scales = "free_y") + # Making graphs the same scale to aid comparison
  scale_y_continuous(expand = c(0, 0))

ggplot(dhi_data, aes(x = Age)) +
  geom_bar() +
  ggtitle("Age by Diabetes Status") +
  xlab("Age in Groupings of Five Starting at 18") +
  facet_wrap(~Diabetes, scales = "free_y") + # Making graphs the same scale to aid comparison
  scale_y_continuous(expand = c(0, 0))

```

The graphs confirm that the distribution of diabetes status is not flat across the numeric variables, meaning that they may have some influence on predicting whether or not someone will have diabetes. It also supported the idea that the data is not uniformally distributed with variables, such as PhysHlth showcasing how most individuals have few or zero poor physical health days, but that 30 poor physical health days is the next most frequent response. The density plot for BMI is also quite interesting as it shows that the distribution for BMI is follows a similar shape between the no and yes groups, but that the Yes group is further to the right than the NO group. Indicating that people with Diabetes are more likely to have higher BMIs.

The next step is going to be to create some contingency tables comparing counts of the variables to the diabetes status, we can make a function that will do this for each variable we have turned into a factor.

```{r}
# Function to create two way contingency tables
TwoWayMaker <- function(data, var1 = "Diabetes"){
  
  # Selecting factors
  fct_vars <- data |>
    select(where(is.factor)) |>
    select(-all_of(var1))
  
  # Creating empty list to store tables
  fct_list <- list()
  
  # create for loop of factor vars
  for(fct_var in colnames(fct_vars)){
    
    #Create contingency tables
    fct_tables <- table(data[[var1]], data[[fct_var]])
    
    # Create proper names for tables
    dimnames(fct_tables) <- list(Diabetes = levels(data[[var1]]),
                                 fct_var = levels(data[[fct_var]]))
    
    # Store table in list
    fct_list[[fct_var]] <- fct_tables
  }
  return(fct_list)
}

TwoWayTables <- TwoWayMaker(dhi_data)
```

I also want to see the tables as proportions, so lets modify the function in order to do so. Of important note I am going to be using margin = 2 to compare across columns, as that will make the data display as the total percent for each level (column in the table) of a factor rather than against the whole dataset. 

```{r}
# Function to create two way contingency tables
TwoWayMaker_percent <- function(data, var1 = "Diabetes"){
  
  # Selecting factors
  fct_vars <- data |>
    select(where(is.factor)) |>
    select(-all_of(var1))
  
  # Creating empty list to store tables
  fct_list <- list()
  
  # create for loop of factor vars
  for(fct_var in colnames(fct_vars)){
    
    #Create contingency tables
    fct_tables <- table(data[[var1]], data[[fct_var]])
    
    # Converting to percents
    fct_tables <- prop.table(fct_tables, margin = 2) * 100
    
    # Create proper names for tables
    dimnames(fct_tables) <- list(Diabetes = levels(data[[var1]]),
                                 fct_var = levels(data[[fct_var]]))
    
    # Store table in list
    fct_list[[fct_var]] <- fct_tables
  }
  return(fct_list)
}

TwoWayTables_percent <- TwoWayMaker_percent(dhi_data)
TwoWayTables_percent
```

Some notable things can be gleamed from these proportion tables, with HighBP, HighChol, Stroke, HeartDisease, PhysActivity, HvyAlch, DiffWalk, Education, and Income being the most interesting variables. A much higher proportion of individuals with High BP had diabetes than individuals with normal BP (24.45% to 6.04 %), a similar occurrence is seen in individuals with high cholesterol (22.015% to 7.98%), individuals who have had a stroke (31.75% to 13.18%), individuals with heart disease (32.97% to 11.95%), and individuals with difficulty walking (30.74% to 10.53%). Individuals who were physically active in the last 30 days had a lower proportion of diabetes (11.61% to 21.14%), Individuals with higher levels of education had a lower proportion of diabetes (9.69% for college grads to 27.01% for those with no schooling), and individuals with higher incomes had a lower proprtion of diabets (7.96% for those who make 75k or more to 24.28% for those who make less than 10k) 

The most striking variable has to be that individuals with heavy alcohol usage had an over two times lower rate of diabetes than individuals who do not heavily use alcohol (5.84% to 12.97%), which may indicate that their are some confounding factors in the data. As research has indicated that heavy alcohol usage was found to be correlated with Type Two Diabetes, but this could also be due to the limited options to the response (only >14 or <14 drinks per week), as data has also shown moderate alcohol usage is negatively correlated with Type two diabetes.

In order to keep this analysis from getting out of hands I am going to choose only 5 categorical variables to plot (bar plots), as I shall be using those alongside BMI to create a model in another document. The 5 variables I am going to choose are HighBp, HighChol, Stroke, PhysActivity, and HeartDisease. As these are all variables that are likely to have an influence on diabets status.

```{r}
# Creating faceit box plots
ggplot(dhi_data, aes(x = HighBP)) +
  geom_bar() +
  ggtitle("BP by Diabetes Status") +
  xlab("High BP Yes or No") +
  facet_wrap(~Diabetes, scales = "free_y") + # Making graphs the same scale to aid comparison
  scale_y_continuous(expand = c(0, 0))

ggplot(dhi_data, aes(x = HighChol)) +
  geom_bar() +
  ggtitle("Cholesterol by Diabetes Status") +
  xlab("High Cholesterol Yes or No") +
  facet_wrap(~Diabetes, scales = "free_y") + # Making graphs the same scale to aid comparison
  scale_y_continuous(expand = c(0, 0))

ggplot(dhi_data, aes(x = Stroke)) +
  geom_bar() +
  ggtitle("Stroke by Diabetes Status") +
  xlab("Ever had a stroke Yes or No") +
  facet_wrap(~Diabetes, scales = "free_y") + # Making graphs the same scale to aid comparison
  scale_y_continuous(expand = c(0, 0))

ggplot(dhi_data, aes(x = PhysActivity)) +
  geom_bar() +
  ggtitle("Physical Activity by Diabetes Status") +
  xlab("Any Physical Activity in the Last 30 days Yes or No") +
  facet_wrap(~Diabetes, scales = "free_y") + # Making graphs the same scale to aid comparison
  scale_y_continuous(expand = c(0, 0))

ggplot(dhi_data, aes(x = HeartDisease)) +
  geom_bar() +
  ggtitle("Heart Disease by Diabetes Status") +
  xlab("Heart Disease Yes or No") +
  facet_wrap(~Diabetes, scales = "free_y") + # Making graphs the same scale to aid comparison
  scale_y_continuous(expand = c(0, 0))


```

These plots help us visualize the previously discussed proportions we found in the contingency tables, with Physical Activity (Yes) showing to have a higher proportion of No diabetes, while all other variables with a status (Yes) are shown to have higher proportions of diabetes. This indicates that these variables are likely to play an important part in predicting whether or not we should expect a yes or no diabetes status.

## Link to Modeling QMD

[Click here for the Modeling Page](Modeling.html)

